CREATE DATABASE CONDOMINIOS
GO
USE CONDOMINIOS


CREATE TABLE TIPO_USUARIO(
    ID_TIPO_USUARIO INT IDENTITY(1,1) PRIMARY KEY,
    TIPO_USUARIO VARCHAR(50) NOT NULL
)

CREATE TABLE ESTADO_USUARIO(
    ID_ESTADO INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO VARCHAR(50) NOT NULL
)

CREATE TABLE USUARIO(
    ID_USUARIO INT IDENTITY(1,1) PRIMARY KEY,
    ID_TIPO_USUARIO INT NOT NULL,
    ID_ESTADO INT NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    CORREO VARCHAR(50) NOT NULL,
    CONTRASENA VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_TIPO_USUARIO) REFERENCES TIPO_USUARIO(ID_TIPO_USUARIO),
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_USUARIO(ID_ESTADO)
)



CREATE TABLE ESTADO_INCIDENCIA(
    ID_ESTADO_INCIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO_INCIDENCIA VARCHAR(50) NOT NULL
)

CREATE TABLE INCIDENCIA(
    ID_INCIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_ESTADO_INCIDENCIA INT NOT NULL,
    DESCRIPCION VARCHAR(50) NOT NULL,
    FECHA_CREACION DATETIME NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_ESTADO_INCIDENCIA) REFERENCES ESTADO_INCIDENCIA(ID_ESTADO_INCIDENCIA)
)


CREATE TABLE TIPO_NOTICIA(
    ID_TIPO_NOTICIA INT IDENTITY(1,1) PRIMARY KEY,
    TIPO_NOTICIA VARCHAR(50) NOT NULL
)

CREATE TABLE NOTICIA(
    ID_NOTICIA INT IDENTITY(1,1) PRIMARY KEY,
    ID_TIPO_NOTICIA INT NOT NULL,
    TITULO VARCHAR(50) NOT NULL,
    CONTENIDO VARCHAR(50) NOT NULL,
    FECHA_PUBLICACION DATETIME NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (ID_TIPO_NOTICIA) REFERENCES TIPO_NOTICIA(ID_TIPO_NOTICIA)
)


CREATE TABLE ESTADO_RESERVACION(
    ID_ESTADO_RESERVACION INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO_RESERVACION VARCHAR(50) NOT NULL
)

CREATE TABLE AREA_COMUN(
    ID_AREA_COMUN INT IDENTITY(1,1) PRIMARY KEY,
    AREA_COMUN VARCHAR(50) NOT NULL
)

CREATE TABLE RESERVACION(
    ID_RESERVACION INT IDENTITY(1,1) PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_AREA_COMUN INT NOT NULL,
    ID_ESTADO_RESERVACION INT NOT NULL,
    FECHA_RESERVACION DATETIME NOT NULL,
    FECHA_CREACION DATETIME NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_AREA_COMUN) REFERENCES AREA_COMUN(ID_AREA_COMUN),
    FOREIGN KEY (ID_ESTADO_RESERVACION) REFERENCES ESTADO_RESERVACION(ID_ESTADO_RESERVACION)
)

CREATE TABLE ESTADO_RESIDENCIA(
    ID_ESTADO_RESIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO_RESIDENCIA VARCHAR(50) NOT NULL
)

CREATE TABLE RESIDENCIA(
    ID_RESIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ID_ESTADO_RESIDENCIA INT NOT NULL,
    NUMERO_RESIDENCIA INT NOT NULL,
    NOMBRE_DUEÑO VARCHAR(50) NOT NULL,
    CANTIDAD_PERSONAS INT NOT NULL,
    ANIO_INICIO INT NOT NULL,
    CANTIDAD_CARROS INT NOT NULL,
    FOREIGN KEY (ID_ESTADO_RESIDENCIA) REFERENCES ESTADO_RESIDENCIA(ID_ESTADO_RESIDENCIA)
)

CREATE TABLE RUBRO_COBRO(
    ID_RUBRO_COBRO INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_RUBRO VARCHAR(50) NOT NULL,
    MONTO DECIMAL(18,2) NOT NULL
)

CREATE TABLE PLAN_COBRO(
    ID_PLAN_COBRO INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_PLAN VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(50) NOT NULL
)

CREATE TABLE PLAN_COBRO_RUBRO_COBRO(
    ID_PLAN_COBRO INT NOT NULL,
    ID_RUBRO_COBRO INT NOT NULL,
    FOREIGN KEY (ID_PLAN_COBRO) REFERENCES PLAN_COBRO(ID_PLAN_COBRO),
    FOREIGN KEY (ID_RUBRO_COBRO) REFERENCES RUBRO_COBRO(ID_RUBRO_COBRO)
)


CREATE TABLE RESERVA_AREA_COMUN(
    ID_RESERVA_AREA_COMUN INT IDENTITY(1,1) PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_AREA_COMUN INT NOT NULL,
    FECHA_RESERVA DATETIME NOT NULL,
    HORA_INICIO DATETIME NOT NULL,
    HORA_FIN DATETIME NOT NULL,
    ID_ESTADO_RESERVACION INT NOT NULL,
    COMENTARIOS VARCHAR(50) NOT NULL,
    FECHA_CREACION DATETIME NOT NULL DEFAULT GETDATE(),
    FECHA_ACTUALIZACION DATETIME NOT NULL DEFAULT GETDATE(),
    CREADO_POR INT NOT NULL,
    ACTUALIZADO_POR INT NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_AREA_COMUN) REFERENCES AREA_COMUN(ID_AREA_COMUN),
    FOREIGN KEY (ID_ESTADO_RESERVACION) REFERENCES ESTADO_RESERVACION(ID_ESTADO_RESERVACION)
)

CREATE TABLE ESTADO_DEUDA(
    ID_ESTADO_DEUDA INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_ESTADO_DEUDA VARCHAR(50) NOT NULL
)

CREATE TABLE GESTION_DEUDA(
    ID_GESTION_DEUDA INT IDENTITY(1,1) PRIMARY KEY,
    ID_RESIDENCIA INT NOT NULL,
    MES INT NOT NULL,
    ANIO INT NOT NULL,
    MONTO DECIMAL(18,2) NOT NULL,
    FECHA_VENCIMIENTO DATETIME NOT NULL,
    ID_ESTADO_DEUDA INT NOT NULL,
    DETALLES_RUBROS VARCHAR(50) NOT NULL,
    FECHA_REGISTRO DATETIME NOT NULL DEFAULT GETDATE(),
    FECHA_PAGO DATETIME NOT NULL,
    FOREIGN KEY (ID_RESIDENCIA) REFERENCES RESIDENCIA(ID_RESIDENCIA),
    FOREIGN KEY (ID_ESTADO_DEUDA) REFERENCES ESTADO_DEUDA(ID_ESTADO_DEUDA)
)


CREATE TABLE GESTION_PLANES_COBRO (
ID_PLAN_COBRO INT PRIMARY KEY,
ID_RESIDENTE INT NOT NULL,
FECHA_INICIO DATE NOT NULL,
FECHA_FIN DATE NOT NULL,
MONTO DECIMAL(10, 2) NOT NULL,
FRECUENCIA_COBRO VARCHAR(20) NOT NULL,
ESTADO_COBRO VARCHAR(20) NOT NULL,
FOREIGN KEY (ID_RESIDENTE) REFERENCES USUARIO (ID_USUARIO)
);

CREATE TABLE GESTIÓN_DE_DEUDAS (
ID_DEUDA INT PRIMARY KEY,
ID_RESIDENTE INT NOT NULL,
ID_PLAN_PAGO INT NOT NULL,
MONTO_DEUDA DECIMAL(10, 2) NOT NULL,
ESTADO_DEUDA VARCHAR(20) NOT NULL,
FECHA_DEUDA DATE NOT NULL,
FOREIGN KEY (ID_RESIDENTE) REFERENCES USUARIO (ID_USUARIO),
FOREIGN KEY (ID_PLAN_PAGO) REFERENCES GESTION_PLANES_COBRO (ID_PLAN_COBRO)
);

CREATE TABLE TIPO_REPORTE (
TIPO_REPORTE_ID INT PRIMARY KEY,
NOMBRE_REPORTE VARCHAR(50) NOT NULL,
DESCRIPCIÓN_REPORTE VARCHAR(255) NOT NULL
);

CREATE TABLE REPORTES (
ID_REPORTE INT PRIMARY KEY,
ID_USUARIO INT NOT NULL,
report_type_id INT NOT NULL,
report_date DATE NOT NULL,
report_data TEXT NOT NULL,
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
FOREIGN KEY (ID_REPORTE) REFERENCES TIPO_REPORTE (TIPO_REPORTE_ID)
);

-- tables updated 


-- 1: Una residencia debe pertenecer a un usuario.
-- Resolucion : Se une la tabla residencia con usuario
ALTER TABLE RESIDENCIA
ADD ID_USUARIO INT;

ALTER TABLE RESIDENCIA
ADD FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO);


-- 2: Los planes de cobro no se asignan en ninguna tabla o relación.
-- Resolucion : De esta manera, cada residencia tendrá un plan de cobro asociado y puede acceder a la información sobre el plan a través de la clave externa.

ALTER TABLE RESIDENCIA
ADD ID_PLAN_COBRO INT NOT NULL,
    FOREIGN KEY (ID_PLAN_COBRO) REFERENCES PLAN_COBRO(ID_PLAN_COBRO);


-- 6: No queda claro como se estable la gestión de las áreas comunes, un horario para las áreas comunes o rangos para la asignación? Cómo se gestiona este aspecto?
ALTER TABLE RESERVACION
ADD FECHA_FIN_RESERVACION DATETIME NOT NULL;






-- INSERTS



INSERT INTO TIPO_USUARIO (TIPO_USUARIO) VALUES ('Administrador');
INSERT INTO TIPO_USUARIO (TIPO_USUARIO) VALUES ('Residente');

INSERT INTO ESTADO_USUARIO (ESTADO) VALUES ('Activo');
INSERT INTO ESTADO_USUARIO (ESTADO) VALUES ('Inactivo')

INSERT INTO USUARIO (ID_TIPO_USUARIO, ID_ESTADO, NOMBRE, APELLIDO, CORREO, CONTRASENA)
VALUES (1, 1, 'John', 'Doe', 'johndoe@example.com', 'password');

INSERT INTO USUARIO (ID_TIPO_USUARIO, ID_ESTADO, NOMBRE, APELLIDO, CORREO, CONTRASENA)
VALUES (1, 1, 'Pedro', 'Pérez', 'pedroperez@email.com', 'password123'),
(2, 2, 'María', 'Rodríguez', 'mariarodriguez@email.com', 'password456');

INSERT INTO ESTADO_INCIDENCIA (ESTADO_INCIDENCIA) VALUES ('Abierta');
INSERT INTO ESTADO_INCIDENCIA (ESTADO_INCIDENCIA) VALUES ('Cerrada');

INSERT INTO INCIDENCIA (ID_USUARIO, ID_ESTADO_INCIDENCIA, DESCRIPCION)
VALUES (1, 1, 'Problema con la iluminación en el garaje.');

INSERT INTO TIPO_NOTICIA (TIPO_NOTICIA) VALUES ('Anuncio');
INSERT INTO TIPO_NOTICIA (TIPO_NOTICIA) VALUES ('Noticia');

INSERT INTO NOTICIA (ID_TIPO_NOTICIA, TITULO, CONTENIDO)
VALUES (1, 'Evento comunitario', 'Habrá barbacoa el próximo fin de semana');

INSERT INTO ESTADO_RESERVACION (ESTADO_RESERVACION) VALUES ('Confirmada');
INSERT INTO ESTADO_RESERVACION (ESTADO_RESERVACION) VALUES ('Cancelada');

INSERT INTO AREA_COMUN (AREA_COMUN) VALUES ('Piscina');
INSERT INTO AREA_COMUN (AREA_COMUN) VALUES ('Gimnasio');

INSERT INTO RESERVACION (ID_USUARIO, ID_AREA_COMUN, ID_ESTADO_RESERVACION, FECHA_RESERVACION)
VALUES (1, 1, 1, '2022-01-01 10:00:00');

INSERT INTO ESTADO_RESIDENCIA (ESTADO_RESIDENCIA) VALUES ('Disponible');
INSERT INTO ESTADO_RESIDENCIA (ESTADO_RESIDENCIA) VALUES ('Ocupada');

INSERT INTO PLAN_COBRO (NOMBRE_PLAN, DESCRIPCION) 
VALUES ('Plan Básico', 'Incluye servicios básicos de agua, luz y gas');

INSERT INTO PLAN_COBRO (NOMBRE_PLAN, DESCRIPCION) 
VALUES ('Premium', 'Este plan ofrece todas las características premium');

INSERT INTO RESIDENCIA (ID_ESTADO_RESIDENCIA, NUMERO_RESIDENCIA, NOMBRE_DUEÑO, CANTIDAD_PERSONAS, ANIO_INICIO, CANTIDAD_CARROS, ID_PLAN_COBRO)
VALUES (1, 123, 'Juan Perez', 4, 2022, 2, 3);

INSERT INTO ESTADO_DEUDA (NOMBRE_ESTADO_DEUDA)
VALUES ('PENDIENTE');

INSERT INTO ESTADO_DEUDA (NOMBRE_ESTADO_DEUDA)
VALUES ('PAGADO');

INSERT INTO GESTION_DEUDA (ID_RESIDENCIA, MES, ANIO, MONTO, FECHA_VENCIMIENTO, ID_ESTADO_DEUDA, DETALLES_RUBROS, FECHA_PAGO)
VALUES (5, 2, 2022, 100.00, '2022-03-01', 1, 'Cuota condominio', '2022-03-15');

INSERT INTO GESTION_DEUDA (ID_RESIDENCIA, MES, ANIO, MONTO, FECHA_VENCIMIENTO, ID_ESTADO_DEUDA, DETALLES_RUBROS, FECHA_PAGO)
VALUES (5, 2, 2022, 500.00, '2022-03-01', 1, 'Mantenimiento de áreas comunes', '2022-03-10');

INSERT INTO GESTION_PLANES_COBRO (ID_PLAN_COBRO, ID_RESIDENTE, FECHA_INICIO, FECHA_FIN, MONTO, FRECUENCIA_COBRO, ESTADO_COBRO)
VALUES (1, 1, '2023-01-01', '2023-12-31', 100.00, 'Mensual', 'Pendiente');

INSERT INTO GESTION_PLANES_COBRO (ID_PLAN_COBRO, ID_RESIDENTE, FECHA_INICIO, FECHA_FIN, MONTO, FRECUENCIA_COBRO, ESTADO_COBRO)
VALUES (2, 2, '2022-05-01', '2022-12-31', 200.00, 'Mensual', 'Activo');

INSERT INTO GESTION_PLANES_COBRO (ID_PLAN_COBRO, ID_RESIDENTE, FECHA_INICIO, FECHA_FIN, MONTO, FRECUENCIA_COBRO, ESTADO_COBRO)
VALUES (3, 3, '2023-03-01', '2023-06-30', 300.00, 'Quincenal', 'Activo');

INSERT INTO RUBRO_COBRO (NOMBRE_RUBRO, MONTO)
VALUES
('Agua', 250.00),
('Luz', 300.00),
('Gas', 200.00),
('Internet', 150.00);


--La tabla PLAN_COBRO_RUBRO_COBRO es una tabla de asociación o de intermediario que permite establecer la relación entre los planes de cobro y los rubros de cobro. 
--La función de esta tabla es registrar y mantener información sobre qué rubros de cobro están asociados a qué planes de cobro.

--Al tener esta información, se puede llevar un seguimiento más detallado y preciso de los montos que se deben cobrar por cada plan de cobro, 
--así como de los rubros de cobro que se incluyen en cada plan. Esto puede ser útil, por ejemplo, para generar reportes detallados sobre el presupuesto y las finanzas del condominio

INSERT INTO TIPO_REPORTE (TIPO_REPORTE_ID, NOMBRE_REPORTE, DESCRIPCIÓN_REPORTE)
VALUES (1, 'Reporte mensual de gastos', 'Este reporte muestra un resumen mensual de todos los gastos del condominio'),
(2, 'Reporte anual de ingresos', 'Este reporte muestra un resumen anual de todos los ingresos del condominio'),
(3, 'Reporte de cobros pendientes', 'Este reporte muestra una lista de todas las cuentas pendientes de cobro en el condominio');


INSERT INTO REPORTES (ID_REPORTE, ID_USUARIO, report_type_id, report_date, report_data)
VALUES (1, 1, 1, '2023-02-09', 'Reporte de gastos del mes de enero');


INSERT INTO RESERVA_AREA_COMUN (ID_USUARIO, ID_AREA_COMUN, FECHA_RESERVA, HORA_INICIO, HORA_FIN, ID_ESTADO_RESERVACION, COMENTARIOS, CREADO_POR, ACTUALIZADO_POR)
VALUES (1, 1, '2023-03-01', '10:00', '12:00', 1, 'Reservación para reunión de vecinos', 1, 1);
