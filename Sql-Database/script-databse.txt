
CREATE CONDOMINIOS
USE CONDOMINIOS


CREATE TABLE TIPO_USUARIO(
    ID_TIPO_USUARIO INT IDENTITY(1,1) PRIMARY KEY,
    TIPO_USUARIO VARCHAR(50) NOT NULL
)

CREATE TABLE ESTADO_USUARIO(
    ID_ESTADO INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO VARCHAR(50) NOT NULL
)

CREATE TABLE USUARIO(
    ID_USUARIO INT IDENTITY(1,1) PRIMARY KEY,
    ID_TIPO_USUARIO INT NOT NULL,
    ID_ESTADO INT NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    CORREO VARCHAR(50) NOT NULL,
    CONTRASENA VARCHAR(50) NOT NULL,
    FOREIGN KEY (ID_TIPO_USUARIO) REFERENCES TIPO_USUARIO(ID_TIPO_USUARIO),
    FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO_USUARIO(ID_ESTADO)
)



CREATE TABLE ESTADO_INCIDENCIA(
    ID_ESTADO_INCIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO_INCIDENCIA VARCHAR(50) NOT NULL
)

CREATE TABLE INCIDENCIA(
    ID_INCIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_ESTADO_INCIDENCIA INT NOT NULL,
    DESCRIPCION VARCHAR(50) NOT NULL,
    FECHA_CREACION DATETIME NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_ESTADO_INCIDENCIA) REFERENCES ESTADO_INCIDENCIA(ID_ESTADO_INCIDENCIA)
)


CREATE TABLE TIPO_NOTICIA(
    ID_TIPO_NOTICIA INT IDENTITY(1,1) PRIMARY KEY,
    TIPO_NOTICIA VARCHAR(50) NOT NULL
)

CREATE TABLE NOTICIA(
    ID_NOTICIA INT IDENTITY(1,1) PRIMARY KEY,
    ID_TIPO_NOTICIA INT NOT NULL,
    TITULO VARCHAR(50) NOT NULL,
    CONTENIDO VARCHAR(50) NOT NULL,
    FECHA_PUBLICACION DATETIME NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (ID_TIPO_NOTICIA) REFERENCES TIPO_NOTICIA(ID_TIPO_NOTICIA)
)


CREATE TABLE ESTADO_RESERVACION(
    ID_ESTADO_RESERVACION INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO_RESERVACION VARCHAR(50) NOT NULL
)

CREATE TABLE AREA_COMUN(
    ID_AREA_COMUN INT IDENTITY(1,1) PRIMARY KEY,
    AREA_COMUN VARCHAR(50) NOT NULL
)

CREATE TABLE RESERVACION(
    ID_RESERVACION INT IDENTITY(1,1) PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_AREA_COMUN INT NOT NULL,
    ID_ESTADO_RESERVACION INT NOT NULL,
    FECHA_RESERVACION DATETIME NOT NULL,
    FECHA_CREACION DATETIME NOT NULL DEFAULT GETDATE(),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_AREA_COMUN) REFERENCES AREA_COMUN(ID_AREA_COMUN),
    FOREIGN KEY (ID_ESTADO_RESERVACION) REFERENCES ESTADO_RESERVACION(ID_ESTADO_RESERVACION)
)

CREATE TABLE ESTADO_RESIDENCIA(
    ID_ESTADO_RESIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ESTADO_RESIDENCIA VARCHAR(50) NOT NULL
)

CREATE TABLE RESIDENCIA(
    ID_RESIDENCIA INT IDENTITY(1,1) PRIMARY KEY,
    ID_ESTADO_RESIDENCIA INT NOT NULL,
    NUMERO_RESIDENCIA INT NOT NULL,
    NOMBRE_DUEÑO VARCHAR(50) NOT NULL,
    CANTIDAD_PERSONAS INT NOT NULL,
    ANIO_INICIO INT NOT NULL,
    CANTIDAD_CARROS INT NOT NULL,
    FOREIGN KEY (ID_ESTADO_RESIDENCIA) REFERENCES ESTADO_RESIDENCIA(ID_ESTADO_RESIDENCIA)
)

CREATE TABLE RUBRO_COBRO(
    ID_RUBRO_COBRO INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_RUBRO VARCHAR(50) NOT NULL,
    MONTO DECIMAL(18,2) NOT NULL
)

CREATE TABLE PLAN_COBRO(
    ID_PLAN_COBRO INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_PLAN VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(50) NOT NULL
)

CREATE TABLE PLAN_COBRO_RUBRO_COBRO(
    ID_PLAN_COBRO INT NOT NULL,
    ID_RUBRO_COBRO INT NOT NULL,
    FOREIGN KEY (ID_PLAN_COBRO) REFERENCES PLAN_COBRO(ID_PLAN_COBRO),
    FOREIGN KEY (ID_RUBRO_COBRO) REFERENCES RUBRO_COBRO(ID_RUBRO_COBRO)
)


CREATE TABLE RESERVA_AREA_COMUN(
    ID_RESERVA_AREA_COMUN INT IDENTITY(1,1) PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_AREA_COMUN INT NOT NULL,
    FECHA_RESERVA DATETIME NOT NULL,
    HORA_INICIO DATETIME NOT NULL,
    HORA_FIN DATETIME NOT NULL,
    ID_ESTADO_RESERVACION INT NOT NULL,
    COMENTARIOS VARCHAR(50) NOT NULL,
    FECHA_CREACION DATETIME NOT NULL DEFAULT GETDATE(),
    FECHA_ACTUALIZACION DATETIME NOT NULL DEFAULT GETDATE(),
    CREADO_POR INT NOT NULL,
    ACTUALIZADO_POR INT NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_AREA_COMUN) REFERENCES AREA_COMUN(ID_AREA_COMUN),
    FOREIGN KEY (ID_ESTADO_RESERVACION) REFERENCES ESTADO_RESERVACION(ID_ESTADO_RESERVACION)
)

CREATE TABLE ESTADO_DEUDA(
    ID_ESTADO_DEUDA INT IDENTITY(1,1) PRIMARY KEY,
    NOMBRE_ESTADO_DEUDA VARCHAR(50) NOT NULL
)

CREATE TABLE GESTION_DEUDA(
    ID_GESTION_DEUDA INT IDENTITY(1,1) PRIMARY KEY,
    ID_RESIDENCIA INT NOT NULL,
    MES INT NOT NULL,
    ANIO INT NOT NULL,
    MONTO DECIMAL(18,2) NOT NULL,
    FECHA_VENCIMIENTO DATETIME NOT NULL,
    ID_ESTADO_DEUDA INT NOT NULL,
    DETALLES_RUBROS VARCHAR(50) NOT NULL,
    FECHA_REGISTRO DATETIME NOT NULL DEFAULT GETDATE(),
    FECHA_PAGO DATETIME NOT NULL,
    FOREIGN KEY (ID_RESIDENCIA) REFERENCES RESIDENCIA(ID_RESIDENCIA),
    FOREIGN KEY (ID_ESTADO_DEUDA) REFERENCES ESTADO_DEUDA(ID_ESTADO_DEUDA)
)


CREATE TABLE GESTION_PLANES_COBRO (
ID_PLAN_COBRO INT PRIMARY KEY,
ID_RESIDENTE INT NOT NULL,
FECHA_INICIO DATE NOT NULL,
FECHA_FIN DATE NOT NULL,
MONTO DECIMAL(10, 2) NOT NULL,
FRECUENCIA_COBRO VARCHAR(20) NOT NULL,
ESTADO_COBRO VARCHAR(20) NOT NULL,
FOREIGN KEY (ID_RESIDENTE) REFERENCES USUARIO (ID_USUARIO)
);

CREATE TABLE GESTIÓN_DE_DEUDAS (
ID_DEUDA INT PRIMARY KEY,
ID_RESIDENTE INT NOT NULL,
ID_PLAN_PAGO INT NOT NULL,
MONTO_DEUDA DECIMAL(10, 2) NOT NULL,
ESTADO_DEUDA VARCHAR(20) NOT NULL,
FECHA_DEUDA DATE NOT NULL,
FOREIGN KEY (ID_RESIDENTE) REFERENCES USUARIO (ID_USUARIO),
FOREIGN KEY (ID_PLAN_PAGO) REFERENCES GESTIÓN_DE_PLANES_DE_COBRO (ID_PLAN_PAGO)
);

CREATE TABLE TIPO_REPORTE (
TIPO_REPORTE_ID INT PRIMARY KEY,
NOMBRE_REPORTE VARCHAR(50) NOT NULL,
DESCRIPCIÓN_REPORTE VARCHAR(255) NOT NULL
);

CREATE TABLE REPORTES (
ID_REPORTE INT PRIMARY KEY,
ID_USUARIO INT NOT NULL,
report_type_id INT NOT NULL,
report_date DATE NOT NULL,
report_data TEXT NOT NULL,
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
FOREIGN KEY (ID_REPORTE) REFERENCES TIPO_REPORTE (TIPO_REPORTE_ID)
);

-- tables updated 


-- 1: Una residencia debe pertenecer a un usuario.
-- Resolucion : Se une la tabla residencia con usuario
ALTER TABLE RESIDENCIA
ADD ID_USUARIO INT;

ALTER TABLE RESIDENCIA
ADD FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO);


-- 2: Los planes de cobro no se asignan en ninguna tabla o relación.
-- Resolucion : De esta manera, cada residencia tendrá un plan de cobro asociado y puede acceder a la información sobre el plan a través de la clave externa.

ALTER TABLE RESIDENCIA
ADD ID_PLAN_COBRO INT NOT NULL,
    FOREIGN KEY (ID_PLAN_COBRO) REFERENCES PLAN_COBRO(ID_PLAN_COBRO);
