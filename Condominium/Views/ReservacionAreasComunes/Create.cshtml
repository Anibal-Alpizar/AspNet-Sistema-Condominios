@model Infraestructure.Model.RESERVA_AREA_COMUN

@{
    ViewBag.Title = "Create";
}

<div id="welcome-message"></div>

<style>
    .card {
        border: none;
        box-shadow: 0 0 5px rgba(0,0,0,0.1);
        background-color: #f5f5f5;
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 20px;
    }

        .card .card-body {
            padding: 20px;
            text-align: center;
        }

        .card .card-title {
            margin-bottom: 10px;
            font-size: 20px;
            font-weight: bold;
        }

        .card .card-text {
            margin-bottom: 0;
            font-size: 16px;
            color: #333;
        }

        .card .reservar {
            margin-top: 20px;
            background-color: #007bff;
            border-color: #007bff;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .card .reservar:hover {
            background-color: #0069d9;
            border-color: #0062cc;
        }

        .card .reservar:focus {
            box-shadow: none;
        }

        .card .reservado {
            margin-top: 20px;
            background-color: #28a745;
            border-color: #28a745;
            font-size: 16px;
            font-weight: bold;
        }

        .card .reservado i {
            margin-right: 8px;
        }
</style>


@using (Html.BeginForm("Save", "ReservacionAreasComunes", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-8 offset-md-2" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title text-center mb-4"><i class="fas fa-newspaper"></i> Crear Una Reserva</h4>
                    </div>
                    <div class="form-group">
                        <label for="ID_USUARIO" class="form-label"><i class="fas fa-newspaper"></i> Usuario </label>
                        <div>
                            <input type="text" class="form-control" id="nombreUsuario" readonly style="display:none;">
                            @Html.EditorFor(model => model.ID_USUARIO, new { htmlAttributes = new { type = "text", @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="ID_AREA_COMUN" class="form-label"><i class="fas fa-newspaper"></i> Áreas Comunes </label>
                        <div class="d-flex align-items-center">
                            <button type="button" class="btn btn-primary mr-3" data-toggle="modal" data-target="#modal-area-comun">
                                +
                            </button>
                            @Html.DropDownListFor(model => model.ID_AREA_COMUN,
                                (SelectList)ViewBag.idAreaComun,
                                "Seleccione el Área Comun",
                                htmlAttributes: new { @class = "form-control", @id = "area-comun-dropdown" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="COMENTARIOS">
                            <i class="fas fa-pencil-alt"></i> Comentarios
                        </label>
                        <div>
                            @Html.EditorFor(model => model.COMENTARIOS, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.COMENTARIOS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <h5><i class="fas fa-calendar"></i> @Html.LabelFor(model => model.FECHA_RESERVA, "Fecha Reserva", htmlAttributes: new { @class = "form-label" })</h5>
                        <div class="position-relative">
                            @Html.EditorFor(model => model.FECHA_RESERVA, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            <span class="position-absolute top-50 translate-middle-y end-0 me-2" onclick="$(this).prev().focus();"><i class="fas fa-calendar text-muted"></i></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.FECHA_RESERVA, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group text-center">
                        <div class="btn-group" role="group">
                            <button type="submit" class="btn btn-primary"><i class="fas fa-plus"></i> Crear</button>
                            <a href="@Url.Action("IndexAdmin", "ReservacionAreasComunes")" class="btn btn-danger"><i class="fas fa-times"></i> Cancelar</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="modal-area-comun" tabindex="-1" role="dialog" aria-labelledby="modal-area-comun-label" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-area-comun-label"><i class="fas fa-newspaper"></i> Área Común</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card-deck">
                    @foreach (var areaComun in ViewBag.idAreaComun)
                    {
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@areaComun.Text</h5>
                                <a href="#" class="btn btn-primary reservar" data-id="@areaComun.Value">Reservar</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {    @Scripts.Render("~/bundles/jqueryval")

<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/smoothness/jquery-ui.css" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">
<script>
    $(document).ready(function () {
        var nombreUsuarioValue = $('#nombreUsuario').val();
        $('#ID_USUARIO').val(nombreUsuarioValue);
    });

    $(document).ready(function () {
        $(".datepicker").datepicker({
            dateFormat: "yy-mm-dd",
            showAnim: "slideDown",
            theme: "base",
            beforeShowDay: function (date) {
                var dateString = jQuery.datepicker.formatDate("yy-mm-dd", date);
                var fechasReservadas = [];

                $.ajax({
                    url: "/ReservacionAreasComunes/GetFechasReservadas",
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        fechasReservadas = data.map(function (d) {
                            return new Date(parseInt(d.substr(6)));
                        });
                    }
                });

                if (fechasReservadas.some(d => d.getTime() === date.getTime())) {
                    return [false, "ui-state-highlight ui-state-error", "Esta fecha ya está reservada"];
                } else {
                    return [true, "", ""];
                }
            },
            onSelect: function (dateText, inst) {
                var fechasReservadas = [];

                $.ajax({
                    url: "/ReservacionAreasComunes/GetFechasReservadas",
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        fechasReservadas = data.map(function (d) {
                            return new Date(parseInt(d.substr(6)));
                        });
                    }
                });

                var selectedDate = new Date(inst.selectedYear, inst.selectedMonth, inst.selectedDay);
                if (fechasReservadas.some(d => d.getTime() === selectedDate.getTime())) {
                    $("#modalFechaReservada").modal("show");
                }
            }
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        console.log("Botón Reservar fue clickeado");
        var botonesReserva = document.querySelectorAll(".reservar");
        botonesReserva.forEach(function (botonReserva) {
            botonReserva.addEventListener("click", function () {
                var idAreaComun = botonReserva.getAttribute("data-id");
                var dropDownList = document.getElementById("area-comun-dropdown");
                if (dropDownList !== null) {
                    var opciones = dropDownList.options;
                    for (var i = 0; i < opciones.length; i++) {
                        if (opciones[i].value === idAreaComun) {
                            opciones[i].selected = true;
                            break;
                        }
                    }
                }
            });
        });
    });

    window.onload = function () {
        var cookieValue = document.cookie
            .split('; ')
            .find(row => row.startsWith('id'))
            .split('=')[1];
        document.getElementById('nombreUsuario').value = cookieValue;
    }

    $(function () {
        $('.reservar').click(function () {
            $('.reservar').prop('disabled', true).text('Reservar').removeClass('btn-success').addClass('btn-primary');
            var button = $(this);
            var icon = $('<i class="fas fa-check-circle me-2"></i>');
            button.text('Reservado').removeClass('btn-primary').addClass('btn-success').append(icon);
            button.prop('disabled', false);
            var idSeleccionado = button.data('id');
            $('.reservar').not(button).prop('disabled', true);
        });
        $('.cancelar').click(function () {
            $('.reservar').prop('disabled', false).text('Reservar').removeClass('btn-success').addClass('btn-primary');
            var idSeleccionado = null;
        });
    });

    $(document).ready(function () {
        $('#area-comun-dropdown').click(function () {
            $('#myModal').modal('show');
        });
    });

    $(function () {

    });

    $(document).ready(function () {
        $('#modal-area-comun .reservar').click(function () {
            var nombreAreaComun = $(this).siblings('.card-title').text();
            $('#modal-area-comun').modal('hide');
            swal({
                title: "Confirmar Reserva",
                text: "¿Desea reservar el área común \"" + nombreAreaComun + "\"?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Aceptar",
                cancelButtonText: "Cancelar",
                closeOnConfirm: true,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        swal({
                            title: "¡Reserva Exitosa!",
                            text: "Ha reservado el área común \"" + nombreAreaComun + "\".",
                            type: "success"
                        });
                    }
                });
        });
    });

</script>

}


